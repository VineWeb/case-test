/**  数据结构
1.栈
2.队列
3.链表
4.集合
5.字典
6.树
7.字典
8.树
9.图
10.堆


*一 时间空间复杂度计算
*二 排序 : 冒泡排序, 选择排序, 插入排序, 归并排序, 快速排序
*三 搜索 : 顺序搜索,  二分查找(二分搜索)
*四 设计思想: 高频，常考： 分而治之、动态规划、（贪心算法、回溯算法）
 *  */

/** [链表和树]  重点、难点
 * 算法： 链表/树/图的遍历, 数组的排序和搜索
 * 链表: 指针
 * 树: 深度优先遍历, 广度优先遍历
 */


/***
 * 经验心得: 
 * 1.搞清楚数据结构和算法的特点和应用场景
 * 2.用JS实现一遍, 最好能用第二第三语言再实现一遍
 * 3.学会分析时间/空间复杂度
 * 4.提炼前端和算法的结合点, 用于工作实战。
 * 
 * 拓展建议: 
 * 1.多刷题, 最好能保证300道以上
 * 2.多总结各种套路、模板
 * 3.多阅读源码，比如React, Lodash, V8
 * 4.多实战, 将数据结构与算法用于工作
 */
const a = { b: c: { d: 1}}